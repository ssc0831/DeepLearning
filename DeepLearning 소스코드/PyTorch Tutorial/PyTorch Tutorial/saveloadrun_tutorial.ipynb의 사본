{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"BnxvugOoczBR"},"outputs":[],"source":["# Google Colab에서 노트북을 실행하실 때에는\n","# https://tutorials.pytorch.kr/beginner/colab 를 참고하세요.\n","%matplotlib inline"]},{"cell_type":"markdown","metadata":{"id":"Sq8hIX9mczBY"},"source":["\n","[파이토치(PyTorch) 기본 익히기](intro.html) ||\n","[빠른 시작](quickstart_tutorial.html) ||\n","[텐서(Tensor)](tensorqs_tutorial.html) ||\n","[Dataset과 Dataloader](data_tutorial.html) ||\n","[변형(Transform)](transforms_tutorial.html) ||\n","[신경망 모델 구성하기](buildmodel_tutorial.html) ||\n","[Autograd](autogradqs_tutorial.html) ||\n","[최적화(Optimization)](optimization_tutorial.html) ||\n","**모델 저장하고 불러오기**\n","\n","# 모델 저장하고 불러오기\n","\n","이번 장에서는 저장하기나 불러오기를 통해 모델의 상태를 유지(persist)하고 모델의 예측을 실행하는 방법을 알아보겠습니다.\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"m5Nvr7hZczBc"},"outputs":[],"source":["import torch\n","import torchvision.models as models"]},{"cell_type":"markdown","metadata":{"id":"7ql5Q_N0czBd"},"source":["## 모델 가중치 저장하고 불러오기\n","\n","PyTorch 모델은 학습한 매개변수를 ``state_dict``\\ 라고 불리는 내부 상태 사전(internal state dictionary)에 저장합니다.\n","이 상태 값들은 ``torch.save`` 메소드를 사용하여 저장(persist)할 수 있습니다:\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xwNn0rLWczBe"},"outputs":[],"source":["model = models.vgg16(weights='IMAGENET1K_V1')\n","torch.save(model.state_dict(), 'model_weights.pth')"]},{"cell_type":"markdown","metadata":{"id":"tt62s0fAczBe"},"source":["모델 가중치를 불러오기 위해서는, 먼저 동일한 모델의 인스턴스(instance)를 생성한 다음에 ``load_state_dict()`` 메소드를 사용하여\n","매개변수들을 불러옵니다.\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yFhCmZ-7czBf"},"outputs":[],"source":["model = models.vgg16() # 여기서는 ``weights`` 를 지정하지 않았으므로, 학습되지 않은 모델을 생성합니다.\n","model.load_state_dict(torch.load('model_weights.pth'))\n","model.eval()"]},{"cell_type":"markdown","metadata":{"id":"EWXBhqY8czBg"},"source":["<div class=\"alert alert-info\"><h4>Note</h4><p>추론(inference)을 하기 전에 ``model.eval()`` 메소드를 호출하여 드롭아웃(dropout)과 배치 정규화(batch normalization)를 평가 모드(evaluation mode)로 설정해야 합니다. 그렇지 않으면 일관성 없는 추론 결과가 생성됩니다.</p></div>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"MsZj8H-xczBh"},"source":["## 모델의 형태를 포함하여 저장하고 불러오기\n","\n","모델의 가중치를 불러올 때, 신경망의 구조를 정의하기 위해 모델 클래스를 먼저 생성(instantiate)해야 했습니다.\n","이 클래스의 구조를 모델과 함께 저장하고 싶으면, (``model.state_dict()``\\ 가 아닌) ``model`` 을 저장 함수에\n","전달합니다:\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mHYKITinczBi"},"outputs":[],"source":["torch.save(model, 'model.pth')"]},{"cell_type":"markdown","metadata":{"id":"eM5PIXSaczBj"},"source":["다음과 같이 모델을 불러올 수 있습니다:\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"GLA3CiDMczBj"},"outputs":[],"source":["model = torch.load('model.pth')"]},{"cell_type":"markdown","metadata":{"id":"UxqMohEpczBj"},"source":["<div class=\"alert alert-info\"><h4>Note</h4><p>이 접근 방식은 Python [pickle](https://docs.python.org/3/library/pickle.html) 모듈을 사용하여 모델을 직렬화(serialize)하므로, 모델을 불러올 때 실제 클래스 정의(definition)를 적용(rely on)합니다.</p></div>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"1cWraV_UczBk"},"source":["## 관련 튜토리얼\n",":doc:`/recipes/recipes/saving_and_loading_a_general_checkpoint`\n","\n"]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.16"},"colab":{"provenance":[{"file_id":"https://github.com/PyTorchKorea/tutorials-kr/blob/master/docs/_downloads/11f1adacb7d237f2041ce267ac38abb6/saveloadrun_tutorial.ipynb","timestamp":1697073282853}]}},"nbformat":4,"nbformat_minor":0}